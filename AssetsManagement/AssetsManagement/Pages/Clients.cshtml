@page "{id:int?}"
@using AssetsManagement.Models
@model AssetsManagement.Pages.ClientsModel

@{
    ViewData["Title"] = "Clients";
}
<h1>Clients</h1>
<br />

<p>
    <a asp-page="./CreateClient">Create New</a>
</p>

<form asp-page="./Clients" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Clients">Back to full List</a>
        </p>
    </div>
</form>

<table class="table mt-5" style="width:100%">
    <thead>
        <tr>
            <th>Name</th>
            <th>Currency</th>
            <th>Account Manager</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Clients != null)
        {
            foreach (var el in Model.Clients)
            {
                <tr>
                    <td>@($"{el.Name} {el.LastName}")</td>
                    <td>
                       @(string.Join(", ", Model.Currencies?
                       .Where(c => el.CurrenciesId.Contains(c.Id))
                       .Select(c => c.Name) ?? new List<string>()))
                    </td>
                    <td>
                        @{var manager = Model.AccountManagers?.FirstOrDefault(am => am.Id == el.AccountManagerId);}
                        @(manager != null ? manager.Name + " " + manager.Surname : "")
                    </td>
                    <td>
                        <a asp-page="./Clients" asp-route-id="@el.Id">Select</a> |
                        <a asp-page="./EditClient" asp-route-id="@el.Id">Edit</a> |
                        <a asp-page="./DeleteClient" asp-route-id="@el.Id">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<br />
@if (Model.Assets != null)
{
    <h3>Assets per Client</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Value</th>
                <th>Last Updated</th>
                <th>Category</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var asset in Model.Assets)
            {   
                <tr>
                    <td>@asset.Name</td>
                    <td>@asset.Value</td>
                    <td>@asset.AssetDate</td>
                    <td>@asset.AssetCategory</td>
                </tr>
            }
        </tbody>
    </table>
}

@{
    var prevDisabled = !(Model.Clients?.HasPreviousPage ?? false) ? "disabled" : "";
    var nextDisabled = !(Model.Clients?.HasNextPage ?? false) ? "disabled" : "";
    }

    <a asp-page="./Clients"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.Clients?.PageIndex - 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./Clients"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.Clients?.PageIndex + 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-primary @nextDisabled">
        Next
    </a>